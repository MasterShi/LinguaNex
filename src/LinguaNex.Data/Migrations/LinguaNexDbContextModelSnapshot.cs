// <auto-generated />
using LinguaNex.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinguaNex.Migrations
{
    [DbContext(typeof(LinguaNexDbContext))]
    partial class LinguaNexDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("LinguaNex.Entities.Culture", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Culture");
                });

            modelBuilder.Entity("LinguaNex.Entities.ProjectAssociation", b =>
                {
                    b.Property<string>("MainProjectId")
                        .HasMaxLength(36)
                        .HasColumnType("TEXT");

                    b.Property<string>("AssociationProjectId")
                        .HasMaxLength(36)
                        .HasColumnType("TEXT");

                    b.HasKey("MainProjectId", "AssociationProjectId");

                    b.HasIndex("AssociationProjectId");

                    b.ToTable("ProjectAssociation");
                });

            modelBuilder.Entity("LinguaNex.Entities.Projects", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enalbe")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("LinguaNex.Entities.Resource", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("TEXT");

                    b.Property<string>("CultureId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(16384)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CultureId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("LinguaNex.Entities.Culture", b =>
                {
                    b.HasOne("LinguaNex.Entities.Projects", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("LinguaNex.Entities.ProjectAssociation", b =>
                {
                    b.HasOne("LinguaNex.Entities.Projects", "AssociationProject")
                        .WithMany()
                        .HasForeignKey("AssociationProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LinguaNex.Entities.Projects", "MainProject")
                        .WithMany("ProjectAssociations")
                        .HasForeignKey("MainProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssociationProject");

                    b.Navigation("MainProject");
                });

            modelBuilder.Entity("LinguaNex.Entities.Resource", b =>
                {
                    b.HasOne("LinguaNex.Entities.Culture", "Culture")
                        .WithMany("Resources")
                        .HasForeignKey("CultureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LinguaNex.Entities.Projects", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Culture");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("LinguaNex.Entities.Culture", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("LinguaNex.Entities.Projects", b =>
                {
                    b.Navigation("ProjectAssociations");
                });
#pragma warning restore 612, 618
        }
    }
}
